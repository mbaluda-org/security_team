name: "CodeQL Reusable Workflow"

# this workflow can be stored in a centralized repo and called externally
# jobs:
#  code_analysis:
#    uses: [REPO]/.github/workflows/code_analysis.yml@main

on:
  workflow_call:
    inputs:
      exclude_codeql_languages:
        description: 'Languages that should not be analyzed'
        default: "[]"
        required: false
        type: string
      java_version:
        default: '17'
        required: false
        type: string
      java_distribution:
        default: 'temurin'
        required: false
        type: string        

jobs:
  # separate into an action
  detect-lang:
    runs-on: ubuntu-latest
    outputs:
      codeql_languages: ${{ steps.codeql_languages.outputs.languages }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - id: codeql_languages
      name: Build language matrix
      # builds the list of languages which are both present in the repo and supported by CodeQL
      run: |
        ql_lang=()
        [[ -n $(find . \( -iname "*.cpp" -o -iname "*.c++" -o -iname "*.cxx" -o -iname "*.hpp" -o -iname "*.hh" -o -iname "*.h++" -o -iname "*.hxx" -o -iname "*.c" -o -iname "*.cc" -o -iname "*.h" \) -print -quit) ]] && ql_lang+=("cpp")
        [[ -n $(find . \( -iname "*.sln" -o -iname "*.csproj" -o -iname "*.cs" -o -iname "*.cshtml" -o -iname "*.xaml" \) -print -quit) ]] && ql_lang+=("csharp")
        [[ -n $(find . -iname "*.go" -print -quit) ]] && ql_lang+=("go")
        [[ -n $(find . \( -iname "*.java" -o -iname "*.kt" \) -print -quit) ]] && ql_lang+=("java")
        [[ -n $(find . \( -iname "*.js" -o -iname "*.jsx" -o -iname "*.mjs" -o -iname "*.es" -o -iname "*.es6" -o -iname "*.htm" -o -iname "*.html" -o -iname "*.xhtm" -o -iname "*.xhtml" -o -iname "*.vue" -o -iname "*.hbs" -o -iname "*.ejs" -o -iname "*.njk" -o -iname "*.json" -o -iname "*.yaml" -o -iname "*.yml" -o -iname "*.raml" -o -iname "*.xml" -o -iname "*.ts" -o -iname "*.tsx" -o -iname "*.mts" -o -iname "*.cts" \) -print -quit) ]] && ql_lang+=("javascript")
        [[ -n $(find . -iname "*.py" -print -quit) ]] && ql_lang+=("python")
        [[ -n $(find . \( -iname "*.rb" -o -iname "*.erb" -o -iname "*.gemspec" -o -iname "Gemfile" \) -print -quit) ]] && ql_lang+=("ruby")
        echo "languages=[\"$(echo ${ql_lang[@]} | sed 's/ /\", \"/g')\"]" >> $GITHUB_OUTPUT
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  codeql-analysis:
    needs: [detect-lang]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(needs.detect-lang.outputs.codeql_languages) }}
        exclude:
        - language: ${{inputs.exclude_codeql_languages}}
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Check CodeQL config existence
      id: custom_codeql_config
      uses: andstor/file-existence-action@v2
      with:
        files: "./.github/codeql/codeql-config.yml"
        
    - name: Initialize CodeQL default
      if: steps.custom_codeql_config.outputs.files_exists == 'false'
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        config-file: mbaluda-org/security_team/codeql-config.yml@main
        #debug: true
        
    - name: Initialize CodeQL custom
      if: steps.custom_codeql_config.outputs.files_exists == 'true'
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml
        debug: true    

    - name: Check local build action existence
      id: custom_build_action
      uses: andstor/file-existence-action@v2
      with:
        files: "./.github/actions/custom_build/action.yml"

    - uses: actions/setup-java@v3
      if: steps.custom_build_action.outputs.files_exists == 'false' && matrix.language == 'java'
      with:
        distribution: ${{inputs.java_distribution}}
        java-version: ${{inputs.java_version}}

    - name: Build default
      if: steps.custom_build_action.outputs.files_exists == 'false'
      uses: github/codeql-action/autobuild@v2

    - name: Build custom
      if: steps.custom_build_action.outputs.files_exists == 'true'
      uses: ./.github/actions/custom_build
      with:
        languages: ${{ matrix.language }}

    # perform the analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
