name: "CodeQL Reusable Workflow"

# this workflow can be stored in a centralized repo and called externally
# jobs:
#  code_analysis:
#    uses: [REPO]/.github/workflows/code_analysis.yml@main

on:
  workflow_call:
    inputs:
      exclude_codeql_languages:
        description: 'Languages that should not be analyzed'
        default: "[]"
        required: false
        type: string
      java_version:
        default: '17'
        required: false
        type: string
      java_distribution:
        default: 'temurin'
        required: false
        type: string        

jobs:
  # separate into an action
  detect-lang:
    runs-on: ubuntu-latest
    outputs:
      codeql_languages: ${{ steps.codeql_languages.outputs.languages }}
    steps:
    - id: codeql_languages
      uses: actions/github-script@v6
      with:
        script: |
          const exclude_codeql_languages = github.getInput('exclude_codeql_languages', { required: false });
          github.info(`exclude_codeql_languages: ${exclude_codeql_languages}`);
          
          const { data: tree } = await new github.rest.git.getTree({
            context.repo.owner, context.repo.repo,
            tree_sha: process.env.GITHUB_SHA ? process.env.GITHUB_SHA : "HEAD",
            recursive: "true",
          });
          
          const hasCppFile = tree.tree.some((item) => 
            item.path?.match(/\.(cpp|c\+\+|cxx|hpp|hh|h\+\+\|hxx|c|cc|h)$/));
          const hasCsharpFile = tree.tree.some((item) => 
            item.path?.match(/\.(sln|csproj|cs|cshtml|xaml)$/));                   
          const hasGoFile = tree.tree.some((item) => 
            item.path?.match(/\.go$/));
          const hasJavaFile = tree.tree.some((item) => 
            item.path?.match(/\.(java|kt)$/));
          const hasPythonFile = tree.tree.some((item) => 
            item.path?.match(/\.py$/));
          const hasRubyFile = tree.tree.some((item) => 
            item.path?.match(/(^Gemfile|\.(rb|erb|gemspec))$/));
          const hasJavascriptFile = tree.tree.some((item) => 
            item.path?.match(/\.(js|jsx|mjs|es|es6|htm|html|xhtm|xhtms|vue|hbs|ejs|njk|json|yaml|yml|raml|xml|ts|tsx|mts|cts)$/));
          
          let languages = [];
          if (hasCppFile) languages.push('cpp');
          if (hasCsharpFile) languages.push('csharp');
          if (hasGoFile) languages.push('go');
          if (hasJavaFile) languages.push('java');
          if (hasPythonFile) languages.push('python');
          if (hasRubyFile) languages.push('ruby');
          if (hasJavascriptFile) languages.push('javascript');
          
          return languages.filter(n => !exclude_codeql_languages.includes(n))
        
  codeql-analysis:
    needs: [detect-lang]
    # skip the analysis when the list of languages is empty
    if: needs.detect-lang.outputs.codeql_languages != '[]'
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(needs.detect-lang.outputs.codeql_languages) }}
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Check CodeQL config existence
      id: custom_codeql_config
      uses: andstor/file-existence-action@v2
      with:
        files: "./.github/codeql/codeql-config.yml"
        
    - name: Initialize CodeQL default
      if: steps.custom_codeql_config.outputs.files_exists == 'false'
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        config-file: mbaluda-org/security_team/codeql-config.yml@main
        #debug: true
        
    - name: Initialize CodeQL custom
      if: steps.custom_codeql_config.outputs.files_exists == 'true'
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        config-file: ./.github/codeql/codeql-config.yml
        debug: true    
    
    - uses: actions/setup-java@v3
      if: steps.custom_build_action.outputs.files_exists == 'false' && matrix.language == 'java'
      with:
        distribution: ${{inputs.java_distribution}}
        java-version: ${{inputs.java_version}}

    - name: Check local build action existence
      id: custom_build_action
      uses: andstor/file-existence-action@v2
      with:
        files: "./.github/actions/custom_build/action.yml"

    - name: Build default
      if: steps.custom_build_action.outputs.files_exists == 'false'
      uses: github/codeql-action/autobuild@v2

    - name: Build custom
      if: steps.custom_build_action.outputs.files_exists == 'true'
      uses: ./.github/actions/custom_build
      with:
        languages: ${{ matrix.language }}

    # perform the analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
